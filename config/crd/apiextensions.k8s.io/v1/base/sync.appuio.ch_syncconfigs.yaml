---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: syncconfigs.sync.appuio.ch
spec:
  group: sync.appuio.ch
  names:
    kind: SyncConfig
    listKind: SyncConfigList
    plural: syncconfigs
    singular: syncconfig
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.synchronizedItemCount
      name: Synced
      type: integer
    - jsonPath: .status.deletedItemCount
      name: Deleted
      type: integer
    - jsonPath: .status.failedItemCount
      name: Failed
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SyncConfig is the Schema for the syncconfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SyncConfigSpec defines the desired state of SyncConfig
            properties:
              deleteItems:
                description: DeleteItems lists items to be deleted from targeted namespaces
                items:
                  description: DeleteMeta defines an object by name, kind and version
                  properties:
                    apiVersion:
                      description: APIVersion of the item to be deleted
                      type: string
                    kind:
                      description: Kind of the item to be deleted
                      type: string
                    name:
                      description: Name of the item to be deleted
                      type: string
                  type: object
                type: array
              forceRecreate:
                description: ForceRecreate defines if objects should be deleted and
                  recreated if updates fails
                type: boolean
              namespaceSelector:
                description: NamespaceSelector defines which namespaces should be
                  targeted
                properties:
                  ignoreNames:
                    description: |-
                      IgnoreNames lists namespace names to be ignored. Each entry can be a Regex pattern and if they match
                      the namespaces will be excluded from the sync even if matching in "matchNames" or via LabelSelector.
                      A namespace is ignored if at least one pattern matches.
                      Invalid patterns will cause the sync to be cancelled and the status conditions will contain the error message.
                    items:
                      type: string
                    type: array
                  labelSelector:
                    description: LabelSelector of namespaces to be targeted. Can be
                      combined with MatchNames to include unlabelled namespaces.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  matchNames:
                    description: |-
                      MatchNames lists namespace names to be targeted. Each entry can be a Regex pattern.
                      A namespace is included if at least one pattern matches.
                      Invalid patterns will cause the sync to be cancelled and the status conditions will contain the error message.
                    items:
                      type: string
                    type: array
                type: object
              syncItems:
                description: SyncItems lists items to be synced to targeted namespaces
                items:
                  description: Manifest is an unstructured kubernetes object with
                    kube-builder validation and pruning settings applied.
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            type: object
          status:
            description: SyncConfigStatus defines the observed state of SyncConfig
            properties:
              conditions:
                description: Conditions contain the states of the SyncConfig. A SyncConfig
                  is considered Ready when at least one item has been synced.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deletedItemCount:
                description: DeletedItemCount holds the accumulated number of deleted
                  objects from targeted namespaces. Inexisting items do not get counted.
                format: int64
                type: integer
              failedItemCount:
                description: FailedItemCount holds the accumulated number of objects
                  that could not be created, updated or deleted. Inexisting items
                  do not get counted.
                format: int64
                type: integer
              synchronizedItemCount:
                description: SynchronizedItemCount holds the accumulated number of
                  created or updated objects in the targeted namespaces.
                format: int64
                type: integer
            required:
            - deletedItemCount
            - failedItemCount
            - synchronizedItemCount
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
